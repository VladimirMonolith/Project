version: '3.8'
services:
  db:
    image: postgres:15
    container_name: my_booking_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    env_file:
      - ./.env-docker
    ports:
      - 5432:5432

  redis:
    image: redis:7
    container_name: my_booking_redis
    restart: always
    depends_on:
      - db
    env_file:
      - ./.env-docker
    ports:
      - 6379:6379

  my_booking:
    # image: booking_app
    build:
      context: .
    container_name: my_booking
    restart: always
    volumes:
      - my_booking_static:/my_booking/app/static/
    depends_on:
      - db
      - redis
    env_file:
      - ./.env-docker
    command: ['/my_booking/docker/app.sh']
    ports:
      - 9000:8000

  celery:
    # image: booking_celery
    build:
      context: .
    container_name: my_booking_celery
    command: ['/my_booking/docker/celery.sh', 'celery']
    depends_on:
      - redis
    env_file:
      - ./.env-docker

  flower:
    # image: booking_flower
    build:
      context: .
    container_name: my_booking_flower
    command: ["/my_booking/docker/celery.sh", "flower"]
    depends_on:
      - redis
      - celery
    env_file:
      - ./.env-docker
    ports:
      - '5555:5555'

  # prometheus:
  #   image: prom/prometheus:v2.43.0
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheusdata:/prometheus
  #   restart: unless-stopped
  #   ports:
  #     - 9090:9090

  # grafana:
  #   image: grafana/grafana:9.4.7
  #   container_name: grafana
  #   volumes:
  #     - grafanadata:/var/lib/grafana
  #   restart: unless-stopped
  #   ports:
  #     - 3000:3000
      
volumes:
  postgres_data:
  my_booking_static:
  # grafanadata:
  # prometheusdata: